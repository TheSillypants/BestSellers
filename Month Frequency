```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)


# MONTH OF PUBLICATION FOR BEST SELLERS (NOT LOOKING AT CATEGORIES) - using Lucas' data 
```{r}
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(lubridate)

# Load the dataset
data <- read.csv("dataclean_updated.csv", stringsAsFactors = FALSE)

# Convert published_date to Date format
data$published_date <- as.Date(data$published_date, format = "%m/%d/%y")

# Extract month name from published_date
data$month <- format(data$published_date, "%B")

# Order months correctly
data$month <- factor(data$month, levels = month.name, ordered = TRUE)

# Count number of books published per month
monthly_counts <- data %>%
  group_by(month) %>%
  summarise(count = n())

# Create bar chart
ggplot(monthly_counts, aes(x = month, y = count, fill = month)) +
  geom_bar(stat = "identity", show.legend = FALSE) +
  labs(title = "Frequency of Bestseller Books Released Per Month",
       x = "Month",
       y = "Number of Bestsellers") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# DISTRIBUTION OF BESTSELLERS BASED ON MONTH/CATEGORIES

updated_categories <- read.csv("dataclean_updated.csv")

View(updated_categories)

# Stacked bar

```{r}
updated_categories <- read.csv("dataclean_updated.csv")

View(updated_categories)


library(ggplot2)
library(dplyr)
library(lubridate)

# Load the updated dataset
data <- read.csv("dataclean_updated.csv", stringsAsFactors = FALSE)

# Convert the published_date column to Date format and extract the month
data$published_date <- as.Date(data$published_date, format = "%m/%d/%y")
data$month <- format(data$published_date, "%B")  # Extract full month name

# Order months correctly
data$month <- factor(data$month, levels = month.name)

# Create the visualization
ggplot(data, aes(x = month, fill = New_Category)) +
  geom_bar() +
  theme_minimal() +
  labs(title = "Distribution of Bestsellers by Month",
       x = "Month",
       y = "Count of Bestsellers",
       fill = "Category") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

# Heat map - category per months

```{r}
library(ggplot2)
library(dplyr)
library(lubridate)

# Load the dataset
data <- read.csv("dataclean_updated.csv", stringsAsFactors = FALSE)

# Convert date column and extract month
data$published_date <- as.Date(data$published_date, format = "%m/%d/%y")
data$month <- format(data$published_date, "%B")

# Order months correctly
data$month <- factor(data$month, levels = month.name)

# Count occurrences of each category per month
heatmap_data <- data %>%
  count(month, New_Category)

# Create heatmap
ggplot(heatmap_data, aes(x = month, y = New_Category, fill = n)) +
  geom_tile(color = "white") +
  scale_fill_gradient(low = "lightblue", high = "darkblue") +
  theme_minimal() +
  labs(title = "Heatmap of Bestsellers by Month and Category", 
       x = "Month", 
       y = "Category", 
       fill = "Count") + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

# Stacked Area Chart - trend of category dominance across months

```{r}
library(ggplot2)
library(dplyr)
library(lubridate)

# Load the dataset
data <- read.csv("dataclean_updated.csv", stringsAsFactors = FALSE)

# Convert date column and extract month
data$published_date <- as.Date(data$published_date, format = "%m/%d/%y")
data$month <- format(data$published_date, "%B")

# Order months correctly
data$month <- factor(data$month, levels = month.name)

# Count occurrences of each category per month
area_chart_data <- data %>%
  count(month, New_Category)

# Create stacked area chart
ggplot(area_chart_data, aes(x = month, y = n, fill = New_Category, group = New_Category)) +
  geom_area(position = "stack", alpha = 0.7) +
  theme_minimal() +
  labs(title = "Stacked Area Chart of Bestsellers by Month",
       x = "Month",
       y = "Count of Bestsellers",
       fill = "Category") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```
